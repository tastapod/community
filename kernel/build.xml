<project xmlns:ivy="antlib:org.apache.ivy.ant" name="neo4j-kernel" default="test">

  <target name="-init-paths" description="Resolve Ivy dependencies and set up paths">
    <ivy:resolve log="download-only" />
    <ivy:cachepath pathid="ivy.compile-classpath" conf="compile" />
    <ivy:cachepath pathid="ivy.test-classpath" conf="test" />
    <property name="module" value="${ant.project.name}" />
    <property name="version" value="${ivy.revision}" />
    <property name="module-jar" location="tmp/artifacts/${module}-${version}.jar" />
    <property name="source-jar" location="tmp/artifacts/${module}-src-${version}.jar" />
    <path id="compile-classpath">
      <path refid="ivy.compile-classpath" />
      <pathelement location="${java.home}/../lib/tools.jar" />
    </path>
    <path id="test-classpath">
      <path refid="compile-classpath" />
      <path refid="ivy.test-classpath" />
      <pathelement location="${module-jar}" />
      <pathelement location="src/test/resources" />
    </path>
  </target>

  <target name="print-paths" depends="-init-paths">
      <property name="compile-classpath" refid="compile-classpath" />
      <echo message="compile-classpath=${compile-classpath}" />

      <property name="test-classpath" refid="test-classpath" />
      <echo message="test-classpath=${test-classpath}" />
  </target>

  <target name="generate-sources" depends="-init-paths">
    <exec osfamily="windows" executable="git.cmd" outputproperty="git-describe">
      <arg value="describe" />
    </exec>
    <exec osfamily="unix" executable="git" outputproperty="git-describe">
      <arg value="describe" />
    </exec>
    <mkdir dir="tmp/generated" />
    <copy todir="tmp/generated">
      <fileset dir="src/template/java" erroronmissingdir="false" />
      <filterset>
        <filter token="artifactId" value="${module}" />
        <filter token="version" value="${version}" />
        <filter token="revision" value="${git-describe}" />
      </filterset>
    </copy>
  </target>

  <target name="build-module" depends="-init-paths,generate-sources" description="compile the module">
    <!-- compile -->
    <mkdir dir="tmp/classes" />
    <copy todir="tmp/classes">
      <fileset dir="src/main/resources" />
    </copy>
    <javac srcdir="src/main/java:tmp/generated" destdir="tmp/classes"
      classpathref="compile-classpath" includeantruntime="false">
    </javac>
    <!-- jar -->
    <mkdir dir="tmp/artifacts" />
    <jar file="${module-jar}" basedir="tmp/classes" />
  </target>

  <target name="assemble-sources" depends="-init-paths,generate-sources" description="assemble the sources">
    <mkdir dir="tmp/artifacts" />

  </target>

  <target name="compile-tests" description="compile the tests">
    <mkdir dir="tmp/test-classes" />
    <javac srcdir="src/test/java" destdir="tmp/test-classes"
      classpathref="test-classpath" includeantruntime="false" />
  </target>

  <target name="run-tests" description="run the tests">
    <mkdir dir="tmp/reports" />
    <junit printsummary="yes" haltonfailure="yes">
      <classpath>
        <path refid="test-classpath" />
        <pathelement location="tmp/test-classes" />
      </classpath>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="tmp/reports">
        <fileset dir="src/test/java">
          <include name="**/Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="publish-artifacts" depends="-init-paths">
    <ivy:publish resolver="local" overwrite="true"
      artifactspattern="tmp/artifacts/[artifact]-[revision].[ext]" />
  </target>

  <target name="clean">
    <delete dir="tmp" />
  </target>

  <target name="rebuild" depends="clean,build" />
  <target name="build" depends="generate-sources,build-module" />
  <target name="test" depends="build,compile-tests,run-tests" />
  <target name="all" depends="rebuild,test,publish-artifacts" />
</project>
